<Type Name="CholeskyDecomposition" FullName="MathNet.Numerics.LinearAlgebra.CholeskyDecomposition">
  <TypeSignature Language="C#" Value="public class CholeskyDecomposition" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>1.0.0.8645</AssemblyVersion>
    <AssemblyVersion>2008.8.16.470</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Cholesky Decomposition.</summary>
    <remarks>
            For a symmetric, positive definite matrix A, the Cholesky decomposition
            is an lower triangular matrix L so that A = L*L'.
            If the matrix is not symmetric or positive definite, the constructor
            returns a partial decomposition and sets an internal flag that may
            be queried by the <see cref="P:MathNet.Numerics.LinearAlgebra.CholeskyDecomposition.IsSPD" /> property.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CholeskyDecomposition (MathNet.Numerics.LinearAlgebra.Matrix m);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m" Type="MathNet.Numerics.LinearAlgebra.Matrix" />
      </Parameters>
      <Docs>
        <param name="m">Square, symmetric matrix.</param>
        <summary>Cholesky algorithm for symmetric and positive definite matrix.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetL">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix GetL ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the TriangularFactor property instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return triangular factor.</summary>
        <returns>L</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSPD">
      <MemberSignature Language="C#" Value="public bool IsSPD { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is the matrix symmetric and positive definite?</summary>
        <value>
          <c>true</c> if A is symmetric and positive definite.</value>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Solve">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix Solve (MathNet.Numerics.LinearAlgebra.Matrix B);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="B" Type="MathNet.Numerics.LinearAlgebra.Matrix" />
      </Parameters>
      <Docs>
        <param name="B">A Matrix with as many rows as A and any number of columns.</param>
        <summary>Solve A*X = B</summary>
        <returns>X so that L*L'*X = B</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Matrix row dimensions must agree.</exception>
        <exception cref="T:System.InvalidOperationException">Matrix is not symmetric positive definite.</exception>
      </Docs>
    </Member>
    <Member MemberName="Solve">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Vector Solve (MathNet.Numerics.LinearAlgebra.Vector b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="MathNet.Numerics.LinearAlgebra.Vector" />
      </Parameters>
      <Docs>
        <param name="b">A Vector with a dimension as high as the number of rows of A.</param>
        <summary>Solve A*x = b</summary>
        <returns>x so that L*L'*x = b</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Matrix row dimensions must agree.</exception>
        <exception cref="T:System.InvalidOperationException">Matrix is not symmetric positive definite.</exception>
      </Docs>
    </Member>
    <Member MemberName="TriangularFactor">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix TriangularFactor { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Decomposition Triangular Factor Matrix (L).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
