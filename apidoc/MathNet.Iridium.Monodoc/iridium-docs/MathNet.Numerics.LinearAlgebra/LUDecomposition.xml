<Type Name="LUDecomposition" FullName="MathNet.Numerics.LinearAlgebra.LUDecomposition">
  <TypeSignature Language="C#" Value="public class LUDecomposition" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>2008.8.16.470</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            LU Decomposition.
            </summary>
    <remarks>
            For an m-by-n matrix A with m &gt;= n, the LU decomposition is an m-by-n
            unit lower triangular matrix L, an n-by-n upper triangular matrix U,
            and a permutation vector pivot of length m so that A(piv,:) = L*U.
            <c> If m &lt; n, then L is m-by-m and U is m-by-n. </c>
            The LU decomposition with pivoting always exists, even if the matrix is
            singular, so the constructor will never fail.  The primary use of the
            LU decomposition is in the solution of square systems of simultaneous
            linear equations.  This will fail if IsNonSingular() returns false.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LUDecomposition (MathNet.Numerics.LinearAlgebra.Matrix A);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="A" Type="MathNet.Numerics.LinearAlgebra.Matrix" />
      </Parameters>
      <Docs>
        <param name="A">Rectangular matrix</param>
        <summary>
            LU Decomposition
            </summary>
        <returns>Structure to access L, U and piv.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Determinant
            </summary>
        <returns>det(A)</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Matrix must be square</exception>
      </Docs>
    </Member>
    <Member MemberName="DoublePivot">
      <MemberSignature Language="C#" Value="public double[] DoublePivot { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PivotVector property instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns pivot permutation vector as a one-dimensional double array.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNonSingular">
      <MemberSignature Language="C#" Value="public bool IsNonSingular { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether the matrix is nonsingular.
            </summary>
        <returns>
          <c>true</c> if U, and hence A, is nonsingular.</returns>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="L">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix L { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the lower triangular factor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermutationMatrix">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix PermutationMatrix { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the permutation matrix P, such that L*U = P*X.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public int[] Pivot { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the integer pivot permutation vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotVector">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Vector PivotVector { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns pivot permutation vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Solve">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix Solve (MathNet.Numerics.LinearAlgebra.Matrix B);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="B" Type="MathNet.Numerics.LinearAlgebra.Matrix" />
      </Parameters>
      <Docs>
        <param name="B">A Matrix with as many rows as A and any number of columns.</param>
        <summary>
            Solve A*X = B
            </summary>
        <returns>X so that L*U*X = B(piv,:)</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Matrix row dimensions must agree.</exception>
        <exception cref="T:System.SystemException">Matrix is singular.</exception>
      </Docs>
    </Member>
    <Member MemberName="U">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.LinearAlgebra.Matrix U { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.LinearAlgebra.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the upper triangular factor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
