<Type Name="Natural" FullName="MathNet.Numerics.Natural">
  <TypeSignature Language="C#" Value="public class Natural : IComparable&lt;MathNet.Numerics.Natural&gt;, IEquatable&lt;MathNet.Numerics.Natural&gt;" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>2008.8.16.470</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;MathNet.Numerics.Natural&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;MathNet.Numerics.Natural&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Reflection.DefaultMember("Item")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            [STUB] The mathematical set of natural numbers (including zero), supporting an arbitrary number of digits.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Add (MathNet.Numerics.Natural number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <summary>
            Add a natural number to this natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Add (MathNet.Numerics.Natural number, uint carry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="MathNet.Numerics.Natural" />
        <Parameter Name="carry" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <param name="carry">To be added.</param>
        <summary>
            Add an unsigned integer to this natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (MathNet.Numerics.Natural other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>
            Compares this natural number with another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Degree">
      <MemberSignature Language="C#" Value="public uint Degree { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The biggest <seealso cref="P:MathNet.Numerics.Natural.Radix" /> exponent with a non-zero coefficient.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (MathNet.Numerics.Natural other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>
            Checks whether this natural number is equal to another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural From (uint number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <summary>
            Create a natural number from an unsigned integer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural From (ulong number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <summary>
            Create a natural number from an unsigned long integer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if this natural number represents zero.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural Max (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Returns the bigger of two natural numbers.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural Min (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Returns the smaller of two natural numbers.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Multiply (MathNet.Numerics.Natural number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <summary>
            Multiply this natural number with another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Multiply (uint factor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>
            Stretch this natural number by an integer factor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural One { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Natural number representing one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural op_Addition (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Add a natural number to a natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool op_GreaterThan (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Check whether a natural number is bigger than another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool op_GreaterThanOrEqual (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Check whether a natural number is bigger than or equal to another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool op_LessThan (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Check whether a natural number is smaller than another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool op_LessThanOrEqual (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Check whether a natural number is smaller than or equal to another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural op_Multiply (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Multiply a natural number with another natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural op_Subtraction (MathNet.Numerics.Natural a, MathNet.Numerics.Natural b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MathNet.Numerics.Natural" />
        <Parameter Name="b" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Subtract a natural number from a natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radix">
      <MemberSignature Language="C#" Value="public ulong Radix { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number system/base of this number.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Subtract (MathNet.Numerics.Natural number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="MathNet.Numerics.Natural" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <summary>
            Subtract a natural number from this natural number.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Subtract (MathNet.Numerics.Natural number, out bool underflow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="MathNet.Numerics.Natural" />
        <Parameter Name="underflow" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <param name="underflow">To be added.</param>
        <summary>
            Subtract a natural number from this number, and returns the underfow state with the <c>underflow</c>-parameter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Natural Subtract (MathNet.Numerics.Natural number, uint carry, out bool underflow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="MathNet.Numerics.Natural" />
        <Parameter Name="carry" Type="System.UInt32" />
        <Parameter Name="underflow" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="number">To be added.</param>
        <param name="carry">To be added.</param>
        <param name="underflow">To be added.</param>
        <summary>
            Subtract a natural number with a carry-over unsigned integer from this number, and returns the underfow state with the <c>underflow</c>-parameter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Two">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural Two { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Natural number representing two.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.Natural Zero { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Natural</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Natural number representing zero.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
