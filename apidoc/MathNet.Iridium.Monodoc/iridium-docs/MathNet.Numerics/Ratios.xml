<Type Name="Ratios" FullName="MathNet.Numerics.Ratios">
  <TypeSignature Language="C#" Value="public static class Ratios" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>2008.8.16.470</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Neper/Decibel ratio expression toolkit.
            </summary>
    <remarks>
      <p>See <a href="http://en.wikipedia.org/wiki/Neper">Wikipedia - Neper</a>
            and <a href="http://en.wikipedia.org/wiki/Decibel">Wikipedia - Decibel</a></p>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DecibelToNeper">
      <MemberSignature Language="C#" Value="public static double DecibelToNeper (double decibel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decibel" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="decibel">To be added.</param>
        <summary>
            Converts a ratio in Decibel (dB, not representing a power gain, or both compared values are already powers) to Neper (Np).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecibelToRatio">
      <MemberSignature Language="C#" Value="public static double DecibelToRatio (double decibel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decibel" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="decibel">To be added.</param>
        <summary>
            Given a ratio in Decibel (dB), evaluate the effective ratio.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecibelToValue">
      <MemberSignature Language="C#" Value="public static double DecibelToValue (double decibel, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decibel" Type="System.Double" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="decibel">To be added.</param>
        <param name="baseValue">To be added.</param>
        <summary>
            Given a ratio in Decibel (dB) and the fixed base value, evaluate the effective value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeperToDecibel">
      <MemberSignature Language="C#" Value="public static double NeperToDecibel (double neper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="neper" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="neper">To be added.</param>
        <summary>
            Converts a ration in Neper (Np, not representing a power gain, or both compared values are already powers) to Decibel (dB).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeperToPowerDecibel">
      <MemberSignature Language="C#" Value="public static double NeperToPowerDecibel (double neper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="neper" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="neper">To be added.</param>
        <summary>
            Convert a ratio in Neper (Np, representing a power gain, while the compared values are not powers, e.g. amplitude, ampère, volts) to Decibel (dB).
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Power Decibel indicates that the method takes care of squaring the compared values to get a power gain mesure.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeperToRatio">
      <MemberSignature Language="C#" Value="public static double NeperToRatio (double neper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="neper" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="neper">To be added.</param>
        <summary>
            Given a ratio in Neper (Np), evaluate the effective ratio.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeperToValue">
      <MemberSignature Language="C#" Value="public static double NeperToValue (double neper, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="neper" Type="System.Double" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="neper">To be added.</param>
        <param name="baseValue">To be added.</param>
        <summary>
            Given a ratio in Neper (Np) and the fixed base value, evaluate the effective value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerDecibelToNeper">
      <MemberSignature Language="C#" Value="public static double PowerDecibelToNeper (double decibel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decibel" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="decibel">To be added.</param>
        <summary>
            Convert a ratio in Decibel (dB, representing a power gain, while the compared values are not powers, e.g. amplitude, ampère, volts) to Neper (Np).
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Power Decibel indicates that the method takes care of squaring the compared values to get a power gain mesure.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerDecibelToRatio">
      <MemberSignature Language="C#" Value="public static double PowerDecibelToRatio (double decibel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decibel" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="decibel">To be added.</param>
        <summary>
            Given a ratio in Decibel (dB, representing a power gain, while the compared values are not powers, e.g. amplitude, ampère, volts), evaluate the effective ratio.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Power Decibel indicates that the method takes care of squaring the compared values to get a power gain mesure.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerDecibelToValue">
      <MemberSignature Language="C#" Value="public static double PowerDecibelToValue (double decibel, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decibel" Type="System.Double" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="decibel">To be added.</param>
        <param name="baseValue">To be added.</param>
        <summary>
            Given a ratio in Decibel (dB, representing a power gain, while the compared values are not powers, e.g. amplitude, ampère, volts) and the fixed base value, evaluate the effective value.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Power Decibel indicates that the method takes care of squaring the compared values to get a power gain mesure.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RatioToDecibel">
      <MemberSignature Language="C#" Value="public static double RatioToDecibel (double ratio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ratio">To be added.</param>
        <summary>
            Given a ratio, express it in Decibel (dB).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RatioToDecibel">
      <MemberSignature Language="C#" Value="public static double RatioToDecibel (double value, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="baseValue">To be added.</param>
        <summary>
            Given an effective value and a fixed base value, express the ratio in Decibel (dB).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RatioToNeper">
      <MemberSignature Language="C#" Value="public static double RatioToNeper (double ratio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ratio">To be added.</param>
        <summary>
            Given a ratio, express it in Neper (Np).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RatioToNeper">
      <MemberSignature Language="C#" Value="public static double RatioToNeper (double value, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="baseValue">To be added.</param>
        <summary>
            Given an effective value and a fixed base value, express the ratio in Neper (Np).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RatioToPowerDecibel">
      <MemberSignature Language="C#" Value="public static double RatioToPowerDecibel (double ratio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ratio">To be added.</param>
        <summary>
            Given a ratio, express it in Decibel (dB, representing a power gain, while the compared values are not powers, e.g. amplitude, ampère, volts).
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Power Decibel indicates that the method takes care of squaring the compared values to get a power gain mesure.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RatioToPowerDecibel">
      <MemberSignature Language="C#" Value="public static double RatioToPowerDecibel (double value, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="baseValue">To be added.</param>
        <summary>
            Given an effective value and a fixed base value, express the ratio in Decibel (dB, representing a power gain, while the compared values are not powers, e.g. amplitude, ampère, volts).
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Power Decibel indicates that the method takes care of squaring the compared values to get a power gain mesure.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
