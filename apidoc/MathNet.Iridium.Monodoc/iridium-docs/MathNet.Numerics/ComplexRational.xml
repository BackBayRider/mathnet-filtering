<Type Name="ComplexRational" FullName="MathNet.Numerics.ComplexRational">
  <TypeSignature Language="C#" Value="public class ComplexRational : ICloneable, IComparable" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>1.0.0.8645</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexRational (MathNet.Numerics.ComplexRational copy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="copy" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="copy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexRational (MathNet.Numerics.Complex[] numeratorCoefficients, MathNet.Numerics.Complex[] denominatorCoefficients);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="numeratorCoefficients" Type="MathNet.Numerics.Complex[]" />
        <Parameter Name="denominatorCoefficients" Type="MathNet.Numerics.Complex[]" />
      </Parameters>
      <Docs>
        <param name="numeratorCoefficients">To be added.</param>
        <param name="denominatorCoefficients">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexRational (MathNet.Numerics.ComplexPolynomial numerator, MathNet.Numerics.ComplexPolynomial denominator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="numerator" Type="MathNet.Numerics.ComplexPolynomial" />
        <Parameter Name="denominator" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="numerator">To be added.</param>
        <param name="denominator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexRational (int numeratorOrder, int denominatorOrder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="numeratorOrder" Type="System.Int32" />
        <Parameter Name="denominatorOrder" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numeratorOrder">To be added.</param>
        <param name="denominatorOrder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Add (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInplace">
      <MemberSignature Language="C#" Value="public void AddInplace (MathNet.Numerics.Complex n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInplace">
      <MemberSignature Language="C#" Value="public void AddInplace (MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Clone ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Denominator">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexPolynomial Denominator { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexPolynomial</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DenominatorOrder">
      <MemberSignature Language="C#" Value="public int DenominatorOrder { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Divide (MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Divide (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideInplace">
      <MemberSignature Language="C#" Value="public void DivideInplace (MathNet.Numerics.Complex n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.Complex Evaluate (MathNet.Numerics.Complex value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.Complex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertInplace">
      <MemberSignature Language="C#" Value="public void InvertInplace ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Multiply (MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Multiply (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyInplace">
      <MemberSignature Language="C#" Value="public void MultiplyInplace (MathNet.Numerics.Complex n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegateInplace">
      <MemberSignature Language="C#" Value="public void NegateInplace ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public void Normalize ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Numerator">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexPolynomial Numerator { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexPolynomial</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumeratorOrder">
      <MemberSignature Language="C#" Value="public int NumeratorOrder { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Addition (MathNet.Numerics.Complex n, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Addition (MathNet.Numerics.ComplexPolynomial polynomial, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Addition (MathNet.Numerics.ComplexRational rational, MathNet.Numerics.Complex n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Addition (MathNet.Numerics.ComplexRational rational, MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Addition (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Division (MathNet.Numerics.ComplexPolynomial polynomial, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Division (MathNet.Numerics.ComplexRational rational, MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Division (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Division (MathNet.Numerics.ComplexRational rational, double n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Division (double n, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Double" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool op_GreaterThan (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool op_GreaterThanOrEqual (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool op_LessThan (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool op_LessThanOrEqual (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Multiply (MathNet.Numerics.Complex n, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Multiply (MathNet.Numerics.ComplexPolynomial polynomial, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Multiply (MathNet.Numerics.ComplexRational rational, MathNet.Numerics.Complex n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Multiply (MathNet.Numerics.ComplexRational rational, MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Multiply (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Subtraction (MathNet.Numerics.Complex n, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Subtraction (MathNet.Numerics.ComplexPolynomial polynomial, MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Subtraction (MathNet.Numerics.ComplexRational rational, MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Subtraction (MathNet.Numerics.ComplexRational rational1, MathNet.Numerics.ComplexRational rational2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational1" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="rational2" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational1">To be added.</param>
        <param name="rational2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_Subtraction (MathNet.Numerics.ComplexRational rational, double n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_UnaryNegation (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static MathNet.Numerics.ComplexRational op_UnaryPlus (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public MathNet.Numerics.ComplexRational Subtract (MathNet.Numerics.ComplexRational rational);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MathNet.Numerics.ComplexRational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rational" Type="MathNet.Numerics.ComplexRational" />
      </Parameters>
      <Docs>
        <param name="rational">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractInplace">
      <MemberSignature Language="C#" Value="public void SubtractInplace (MathNet.Numerics.Complex n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="MathNet.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractInplace">
      <MemberSignature Language="C#" Value="public void SubtractInplace (MathNet.Numerics.ComplexPolynomial polynomial);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polynomial" Type="MathNet.Numerics.ComplexPolynomial" />
      </Parameters>
      <Docs>
        <param name="polynomial">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string baseVariable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.8645</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseVariable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseVariable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
