<Type Name="HypergeometricDistribution" FullName="MathNet.Numerics.Distributions.HypergeometricDistribution">
  <TypeSignature Language="C#" Value="public sealed class HypergeometricDistribution : MathNet.Numerics.Distributions.DiscreteDistribution" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>2008.8.16.470</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MathNet.Numerics.Distributions.DiscreteDistribution</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides generation of hypergeometric distributed random numbers.
            </summary>
    <remarks>
            The hypergeometric distribution generates only discrete numbers.<br />
            The implementation bases upon information presented on
              <a href="http://en.wikipedia.org/wiki/Hypergeometric_distribution">Wikipedia - Geometric distribution</a>.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HypergeometricDistribution ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance, using a <see cref="T:MathNet.Numerics.RandomSources.SystemRandomSource" />
            as underlying random number generator.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HypergeometricDistribution (MathNet.Numerics.RandomSources.RandomSource random);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="random" Type="MathNet.Numerics.RandomSources.RandomSource" />
      </Parameters>
      <Docs>
        <param name="random">A <see cref="T:MathNet.Numerics.RandomSources.RandomSource" /> object.</param>
        <summary>
            Initializes a new instance, using the specified <see cref="T:MathNet.Numerics.RandomSources.RandomSource" />
            as underlying random number generator.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="random" /> is NULL (<see langword="Nothing" /> in Visual Basic).
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HypergeometricDistribution (int populationSize, int favoredItems, int numberOfSamples);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="populationSize" Type="System.Int32" />
        <Parameter Name="favoredItems" Type="System.Int32" />
        <Parameter Name="numberOfSamples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="populationSize">To be added.</param>
        <param name="favoredItems">To be added.</param>
        <param name="numberOfSamples">To be added.</param>
        <summary>
            Initializes a new instance, using a <see cref="T:MathNet.Numerics.RandomSources.SystemRandomSource" />
            as underlying random number generator.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CumulativeDistribution">
      <MemberSignature Language="C#" Value="public override double CumulativeDistribution (double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            Continuous cumulative distribution function (cdf) of this probability distribution.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FavoredItems">
      <MemberSignature Language="C#" Value="public int FavoredItems { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of items of the population that are in favor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidParameterSet">
      <MemberSignature Language="C#" Value="public static bool IsValidParameterSet (int populationSize, int favoredItems, int numberOfSamples);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="populationSize" Type="System.Int32" />
        <Parameter Name="favoredItems" Type="System.Int32" />
        <Parameter Name="numberOfSamples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="populationSize">To be added.</param>
        <param name="favoredItems">To be added.</param>
        <param name="numberOfSamples">To be added.</param>
        <summary>
            Determines whether the specified parameters is valid.
            </summary>
        <returns>
          <see langword="true" /> if values are greater than or equal to 0.0 and both favored items and number of samples are not bigger than the population size; otherwise, <see langword="false" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public override int Maximum { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum possible value of generated random numbers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public override double Mean { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mean value of generated random numbers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public override int Median { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the median of generated random numbers.
            Throws <see cref="T:System.NotSupportedException" /> since
            the value is not defined for this distribution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public override int Minimum { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the minimum possible value of generated random numbers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextInt32">
      <MemberSignature Language="C#" Value="public override int NextInt32 ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a geometric distributed floating point random number.
            </summary>
        <returns>A geometric distributed double-precision floating point number.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSamples">
      <MemberSignature Language="C#" Value="public int NumberOfSamples { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of samples.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulationSize">
      <MemberSignature Language="C#" Value="public int PopulationSize { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the population size parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProbabilityMass">
      <MemberSignature Language="C#" Value="public override double ProbabilityMass (int x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>
            Discrete probability mass function (pmf) of this probability distribution.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDistributionParameters">
      <MemberSignature Language="C#" Value="public void SetDistributionParameters (int populationSize, int favoredItems, int numberOfSamples);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="populationSize" Type="System.Int32" />
        <Parameter Name="favoredItems" Type="System.Int32" />
        <Parameter Name="numberOfSamples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="populationSize">To be added.</param>
        <param name="favoredItems">To be added.</param>
        <param name="numberOfSamples">To be added.</param>
        <summary>
            Configure all distribution parameters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skewness">
      <MemberSignature Language="C#" Value="public override double Skewness { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the skewness of generated random numbers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public override double Variance { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the variance of generated random numbers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
