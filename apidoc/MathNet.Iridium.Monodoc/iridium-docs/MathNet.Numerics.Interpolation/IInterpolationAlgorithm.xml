<Type Name="IInterpolationAlgorithm" FullName="MathNet.Numerics.Interpolation.IInterpolationAlgorithm">
  <TypeSignature Language="C#" Value="public interface IInterpolationAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>MathNet.Iridium</AssemblyName>
    <AssemblyVersion>2008.8.16.470</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Please use IInterpolationMethod instead. This interface is obsolete and will be removed in future versions.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Interpolation algorithm
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EffectiveOrder">
      <MemberSignature Language="C#" Value="public int EffectiveOrder { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Effective interpolation order.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:MathNet.Numerics.Interpolation.IInterpolationAlgorithm.MaximumOrder" />
      </Docs>
    </Member>
    <Member MemberName="Extrapolate">
      <MemberSignature Language="C#" Value="public double Extrapolate (double t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>
            Extrapolate at point t.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpolate">
      <MemberSignature Language="C#" Value="public double Interpolate (double t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>
            Interpolate at point t.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpolate">
      <MemberSignature Language="C#" Value="public double Interpolate (double t, out double error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="error" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
            Interpolate at point t and return the estimated error as error-parameter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumOrder">
      <MemberSignature Language="C#" Value="public int MaximumOrder { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum interpolation order.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:MathNet.Numerics.Interpolation.IInterpolationAlgorithm.EffectiveOrder" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (MathNet.Numerics.SampleList samples);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samples" Type="MathNet.Numerics.SampleList" />
      </Parameters>
      <Docs>
        <param name="samples">To be added.</param>
        <summary>
            Precompute/optimize the algoritm for the given sample set.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportErrorEstimation">
      <MemberSignature Language="C#" Value="public bool SupportErrorEstimation { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2008.8.16.470</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the alorithm supports error estimation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
