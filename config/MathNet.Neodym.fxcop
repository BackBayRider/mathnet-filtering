<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.35" Name="NeodymAnalysis">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">http://www.gotdotnet.com/team/fxcop//xsl/1.35/FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="False" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>100</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>10</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
  <VersionAware>False</VersionAware>
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/../build/Release/MathNet.Neodym.dll" Analyze="True">
   <Modules>
    <Module Name="mathnet.neodym.dll" Analyze="True">
     <Namespaces>
      <Namespace Name="" Analyze="True">
       <Types>
        <Type Name="&lt;Module&gt;" Analyze="True" />
       </Types>
      </Namespace>
      <Namespace Name="MathNet.SignalProcessing.DataSources" Analyze="True">
       <Types>
        <Type Name="SignalGenerator" Analyze="True">
         <Members>
          <Member Name=".ctor()" Analyze="True" />
          <Member Name="Impulse(System.Int32,System.Int32,System.Double,System.Int32):System.Double[]" Analyze="True" />
          <Member Name="Sine(System.Double,System.Double,System.Double,System.Double,System.Int32):System.Double[]" Analyze="True" />
          <Member Name="Step(System.Int32,System.Double,System.Int32):System.Double[]" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MathNet.SignalProcessing.Filter" Analyze="True">
       <Types>
        <Type Name="FilterType" Analyze="True">
         <Members>
          <Member Name="BandPass" Analyze="True" />
          <Member Name="BandStop" Analyze="True" />
          <Member Name="HighPass" Analyze="True" />
          <Member Name="LowPass" Analyze="True" />
          <Member Name="Other" Analyze="True" />
          <Member Name="value__" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ImpulseResponse" Analyze="True">
         <Members>
          <Member Name="Finite" Analyze="True" />
          <Member Name="Infinite" Analyze="True" />
          <Member Name="value__" Analyze="True" />
         </Members>
        </Type>
        <Type Name="IOnlineFilter" Analyze="True">
         <Members>
          <Member Name="ProcessSample(System.Double):System.Double" Analyze="True" />
          <Member Name="ProcessSamples(System.Double[]):System.Double[]" Analyze="True" />
          <Member Name="Reset():System.Void" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OnlineFilter" Analyze="True">
         <Members>
          <Member Name=".ctor()" Analyze="True" />
          <Member Name="CreateBandpass(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double,System.Double):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateBandpass(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double,System.Double,System.Int32):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateBandstop(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double,System.Double):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateBandstop(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double,System.Double,System.Int32):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateDenoise():MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateDenoise(System.Int32):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateHighpass(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateHighpass(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double,System.Int32):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateLowpass(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="CreateLowpass(MathNet.SignalProcessing.Filter.ImpulseResponse,System.Double,System.Double,System.Int32):MathNet.SignalProcessing.Filter.OnlineFilter" Analyze="True" />
          <Member Name="ProcessSample(System.Double):System.Double" Analyze="True" />
          <Member Name="ProcessSamples(System.Double[]):System.Double[]" Analyze="True" />
          <Member Name="Reset():System.Void" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MathNet.SignalProcessing.Filter.FIR" Analyze="True">
       <Types>
        <Type Name="FirCoefficients" Analyze="True">
         <Members>
          <Member Name="BandPass(System.Double,System.Double,System.Double,System.Int32):System.Double[]" Analyze="True" />
          <Member Name="BandStop(System.Double,System.Double,System.Double,System.Int32):System.Double[]" Analyze="True" />
          <Member Name="HighPass(System.Double,System.Double,System.Int32):System.Double[]" Analyze="True" />
          <Member Name="LowPass(System.Double,System.Double,System.Int32):System.Double[]" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OnlineFirFilter" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Collections.Generic.IList`1&lt;System.Double&gt;)" Analyze="True" />
          <Member Name="_buffer" Analyze="True" />
          <Member Name="_coefficients" Analyze="True" />
          <Member Name="_offset" Analyze="True" />
          <Member Name="_size" Analyze="True" />
          <Member Name="ProcessSample(System.Double):System.Double" Analyze="True" />
          <Member Name="Reset():System.Void" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MathNet.SignalProcessing.Filter.IIR" Analyze="True">
       <Types>
        <Type Name="IirCoefficients" Analyze="True">
         <Members>
          <Member Name="BandPass(System.Double,System.Double,System.Double):System.Double[]" Analyze="True" />
          <Member Name="BandStop(System.Double,System.Double,System.Double):System.Double[]" Analyze="True" />
          <Member Name="BetaGamma(System.Double&amp;,System.Double&amp;,System.Double&amp;,System.Double,System.Double,System.Double,System.Double):System.Void" Analyze="True" />
          <Member Name="BuildCoefficients(System.Double,System.Double,System.Double,System.Double,System.Double):System.Double[]" Analyze="True" />
          <Member Name="HighPass(System.Double,System.Double,System.Double):System.Double[]" Analyze="True" />
          <Member Name="LowPass(System.Double,System.Double,System.Double):System.Double[]" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OnlineIirFilter" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Double[])" Analyze="True" />
          <Member Name="_buffer" Analyze="True" />
          <Member Name="_halfSize" Analyze="True" />
          <Member Name="_leftCoefficients" Analyze="True" />
          <Member Name="_offset" Analyze="True" />
          <Member Name="_rightCoefficients" Analyze="True" />
          <Member Name="_size" Analyze="True" />
          <Member Name="ProcessSample(System.Double):System.Double" Analyze="True" />
          <Member Name="Reset():System.Void" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MathNet.SignalProcessing.Filter.Median" Analyze="True">
       <Types>
        <Type Name="OnlineMedianFilter" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Int32)" Analyze="True" />
          <Member Name="_buffer" Analyze="True" />
          <Member Name="ProcessSample(System.Double):System.Double" Analyze="True" />
          <Member Name="Reset():System.Void" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MathNet.SignalProcessing.Filter.Utils" Analyze="True">
       <Types>
        <Type Name="OrderedShiftBuffer" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Int32)" Analyze="True" />
          <Member Name="_initialized" Analyze="True" />
          <Member Name="_len" Analyze="True" />
          <Member Name="_mid" Analyze="True" />
          <Member Name="_ordered" Analyze="True" />
          <Member Name="_shift" Analyze="True" />
          <Member Name="ActualCount" Analyze="True">
           <Accessors>
            <Accessor Name="get_ActualCount():System.Int32" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="Append(System.Double):System.Void" Analyze="True" />
          <Member Name="ByInsertOrder" Analyze="True">
           <Accessors>
            <Accessor Name="get_ByInsertOrder():System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="ByValueOrder" Analyze="True">
           <Accessors>
            <Accessor Name="get_ByValueOrder():System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="Clear():System.Void" Analyze="True" />
          <Member Name="InitializedCount" Analyze="True">
           <Accessors>
            <Accessor Name="get_InitializedCount():System.Int32" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="IsInitialized" Analyze="True">
           <Accessors>
            <Accessor Name="get_IsInitialized():System.Boolean" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="Median" Analyze="True">
           <Accessors>
            <Accessor Name="get_Median():System.Double" Analyze="True" />
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="OrderedShiftBuffer+&lt;get_ByInsertOrder&gt;d__4" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Int32)" Analyze="True" />
          <Member Name="&lt;&gt;1__state" Analyze="True" />
          <Member Name="&lt;&gt;2__current" Analyze="True" />
          <Member Name="&lt;&gt;4__this" Analyze="True" />
          <Member Name="&lt;item&gt;5__5" Analyze="True" />
          <Member Name="MoveNext():System.Boolean" Analyze="True" />
          <Member Name="System.Collections.Generic.IEnumerable&lt;System.Double&gt;.GetEnumerator():System.Collections.Generic.IEnumerator`1&lt;System.Double&gt;" Analyze="True" />
          <Member Name="System.Collections.Generic.IEnumerator&lt;System.Double&gt;.Current" Analyze="True">
           <Accessors>
            <Accessor Name="System.Collections.Generic.IEnumerator&lt;System.Double&gt;.get_Current():System.Double" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator" Analyze="True" />
          <Member Name="System.Collections.IEnumerator.Current" Analyze="True">
           <Accessors>
            <Accessor Name="System.Collections.IEnumerator.get_Current():System.Object" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="System.Collections.IEnumerator.Reset():System.Void" Analyze="True" />
          <Member Name="System.IDisposable.Dispose():System.Void" Analyze="True" />
         </Members>
        </Type>
        <Type Name="OrderedShiftBuffer+&lt;get_ByValueOrder&gt;d__0" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Int32)" Analyze="True" />
          <Member Name="&lt;&gt;1__state" Analyze="True" />
          <Member Name="&lt;&gt;2__current" Analyze="True" />
          <Member Name="&lt;&gt;4__this" Analyze="True" />
          <Member Name="&lt;item&gt;5__1" Analyze="True" />
          <Member Name="MoveNext():System.Boolean" Analyze="True" />
          <Member Name="System.Collections.Generic.IEnumerable&lt;System.Double&gt;.GetEnumerator():System.Collections.Generic.IEnumerator`1&lt;System.Double&gt;" Analyze="True" />
          <Member Name="System.Collections.Generic.IEnumerator&lt;System.Double&gt;.Current" Analyze="True">
           <Accessors>
            <Accessor Name="System.Collections.Generic.IEnumerator&lt;System.Double&gt;.get_Current():System.Double" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="System.Collections.IEnumerable.GetEnumerator():System.Collections.IEnumerator" Analyze="True" />
          <Member Name="System.Collections.IEnumerator.Current" Analyze="True">
           <Accessors>
            <Accessor Name="System.Collections.IEnumerator.get_Current():System.Object" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="System.Collections.IEnumerator.Reset():System.Void" Analyze="True" />
          <Member Name="System.IDisposable.Dispose():System.Void" Analyze="True" />
         </Members>
        </Type>
        <Type Name="ShiftBuffer" Analyze="True">
         <Members>
          <Member Name=".ctor(System.Double[])" Analyze="True" />
          <Member Name=".ctor(System.Int32)" Analyze="True" />
          <Member Name="buffer" Analyze="True" />
          <Member Name="Item[System.Int32]" Analyze="True">
           <Accessors>
            <Accessor Name="get_Item(System.Int32):System.Double" Analyze="True" />
            <Accessor Name="set_Item(System.Int32,System.Double):System.Void" Analyze="True" />
           </Accessors>
          </Member>
          <Member Name="MultiplyAccumulate(System.Double[]):System.Double" Analyze="True" />
          <Member Name="MultiplyAccumulate(System.Double[],System.Int32,System.Int32):System.Double" Analyze="True" />
          <Member Name="offset" Analyze="True" />
          <Member Name="Reset():System.Void" Analyze="True" />
          <Member Name="ShiftAddHead(System.Double):System.Void" Analyze="True" />
          <Member Name="size" Analyze="True" />
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True">
    <Rule Name="AbstractTypesShouldNotHaveConstructors" Enabled="True" />
    <Rule Name="AssembliesShouldHaveValidStrongNames" Enabled="True" />
    <Rule Name="AvoidEmptyInterfaces" Enabled="True" />
    <Rule Name="AvoidExcessiveParametersOnGenericTypes" Enabled="True" />
    <Rule Name="AvoidNamespacesWithFewTypes" Enabled="True" />
    <Rule Name="AvoidOutParameters" Enabled="True" />
    <Rule Name="CollectionsShouldImplementGenericInterface" Enabled="True" />
    <Rule Name="ConsiderPassingBaseTypesAsParameters" Enabled="True" />
    <Rule Name="DeclareEventHandlersCorrectly" Enabled="True" />
    <Rule Name="DeclareTypesInNamespaces" Enabled="True" />
    <Rule Name="DefaultParametersShouldNotBeUsed" Enabled="True" />
    <Rule Name="DefineAccessorsForAttributeArguments" Enabled="True" />
    <Rule Name="DoNotCatchGeneralExceptionTypes" Enabled="True" />
    <Rule Name="DoNotDeclareProtectedMembersInSealedTypes" Enabled="True" />
    <Rule Name="DoNotDeclareStaticMembersOnGenericTypes" Enabled="True" />
    <Rule Name="DoNotDeclareVirtualMembersInSealedTypes" Enabled="True" />
    <Rule Name="DoNotDeclareVisibleInstanceFields" Enabled="True" />
    <Rule Name="DoNotExposeGenericLists" Enabled="True" />
    <Rule Name="DoNotHideBaseClassMethods" Enabled="True" />
    <Rule Name="DoNotNestGenericTypesInMemberSignatures" Enabled="True" />
    <Rule Name="DoNotOverloadOperatorEqualsOnReferenceTypes" Enabled="True" />
    <Rule Name="DoNotPassTypesByReference" Enabled="True" />
    <Rule Name="EnumeratorsShouldBeStronglyTyped" Enabled="True" />
    <Rule Name="EnumsShouldHaveZeroValue" Enabled="True" />
    <Rule Name="EnumStorageShouldBeInt32" Enabled="True" />
    <Rule Name="ExceptionsShouldBePublic" Enabled="True" />
    <Rule Name="GenericMethodsShouldProvideTypeParameter" Enabled="True" />
    <Rule Name="ICollectionImplementationsHaveStronglyTypedMembers" Enabled="True" />
    <Rule Name="ImplementIDisposableCorrectly" Enabled="True" />
    <Rule Name="ImplementStandardExceptionConstructors" Enabled="True" />
    <Rule Name="IndexersShouldNotBeMultidimensional" Enabled="True" />
    <Rule Name="InterfaceMethodsShouldBeCallableByChildTypes" Enabled="True" />
    <Rule Name="ListsAreStronglyTyped" Enabled="True" />
    <Rule Name="MarkAssembliesWithAssemblyVersion" Enabled="True" />
    <Rule Name="MarkAssembliesWithClsCompliant" Enabled="True" />
    <Rule Name="MarkAssembliesWithComVisible" Enabled="True" />
    <Rule Name="MarkAttributesWithAttributeUsage" Enabled="True" />
    <Rule Name="MarkEnumsWithFlags" Enabled="True" />
    <Rule Name="MembersShouldNotExposeCertainConcreteTypes" Enabled="True" />
    <Rule Name="MovePInvokesToNativeMethodsClass" Enabled="True" />
    <Rule Name="NestedTypesShouldNotBeVisible" Enabled="True" />
    <Rule Name="OverloadOperatorEqualsOnOverloadingAddAndSubtract" Enabled="True" />
    <Rule Name="OverrideMethodsOnComparableTypes" Enabled="True" />
    <Rule Name="PropertiesShouldNotBeWriteOnly" Enabled="True" />
    <Rule Name="ProvideObsoleteAttributeMessage" Enabled="True" />
    <Rule Name="ReplaceRepetitiveArgumentsWithParamsArray" Enabled="True" />
    <Rule Name="StaticHolderTypesShouldBeSealed" Enabled="True" />
    <Rule Name="StaticHolderTypesShouldNotHaveConstructors" Enabled="True" />
    <Rule Name="StringUriOverloadsCallSystemUriOverloads" Enabled="True" />
    <Rule Name="TypesShouldNotExtendCertainBaseTypes" Enabled="True" />
    <Rule Name="TypesThatOwnDisposableFieldsShouldBeDisposable" Enabled="True" />
    <Rule Name="TypesThatOwnNativeResourcesShouldBeDisposable" Enabled="True" />
    <Rule Name="UriParametersShouldNotBeStrings" Enabled="True" />
    <Rule Name="UriPropertiesShouldNotBeStrings" Enabled="True" />
    <Rule Name="UriReturnValuesShouldNotBeStrings" Enabled="True" />
    <Rule Name="UseEventsWhereAppropriate" Enabled="True" />
    <Rule Name="UseGenericEventHandlerInstances" Enabled="True" />
    <Rule Name="UseGenericsWhereAppropriate" Enabled="True" />
    <Rule Name="UseIntegralOrStringArgumentForIndexers" Enabled="True" />
    <Rule Name="UsePropertiesWhereAppropriate" Enabled="True" />
    <Rule Name="ValidateArgumentsOfPublicMethods" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True">
    <Rule Name="AvoidDuplicateAccelerators" Enabled="True" />
    <Rule Name="DoNotHardcodeLocaleSpecificStrings" Enabled="True" />
    <Rule Name="DoNotPassLiteralsAsLocalizedParameters" Enabled="True" />
    <Rule Name="SetLocaleForDataTypes" Enabled="True" />
    <Rule Name="SpecifyCultureInfo" Enabled="True" />
    <Rule Name="SpecifyIFormatProvider" Enabled="True" />
    <Rule Name="SpecifyMessageBoxOptions" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True">
    <Rule Name="AutoLayoutTypesShouldNotBeComVisible" Enabled="True" />
    <Rule Name="AvoidInt64ArgumentsForVB6Clients" Enabled="True" />
    <Rule Name="AvoidNonpublicFieldsInComVisibleValueTypes" Enabled="True" />
    <Rule Name="AvoidOverloadsInComVisibleInterfaces" Enabled="True" />
    <Rule Name="AvoidStaticMembersInComVisibleTypes" Enabled="True" />
    <Rule Name="CallGetLastErrorImmediatelyAfterPInvoke" Enabled="True" />
    <Rule Name="ComRegistrationMethodsShouldBeMatched" Enabled="True" />
    <Rule Name="ComRegistrationMethodsShouldNotBeVisible" Enabled="True" />
    <Rule Name="ComVisibleTypeBaseTypesShouldBeComVisible" Enabled="True" />
    <Rule Name="ComVisibleTypesShouldBeCreatable" Enabled="True" />
    <Rule Name="DeclarePInvokesCorrectly" Enabled="True" />
    <Rule Name="DoNotUseAutoDualClassInterfaceType" Enabled="True" />
    <Rule Name="MarkBooleanPInvokeArgumentsWithMarshalAs" Enabled="True" />
    <Rule Name="MarkComSourceInterfacesAsIDispatch" Enabled="True" />
    <Rule Name="PInvokeEntryPointsShouldExist" Enabled="True" />
    <Rule Name="PInvokesShouldNotBeVisible" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True">
    <Rule Name="DoNotUseIdleProcessPriority" Enabled="True" />
    <Rule Name="DoNotUseTimersThatPreventPowerStateChanges" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True">
    <Rule Name="AvoidLanguageSpecificTypeNamesInParameters" Enabled="True" />
    <Rule Name="AvoidTypeNamesInParameters" Enabled="True" />
    <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
    <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
    <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
    <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="IdentifiersShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="True" />
    <Rule Name="LongAcronymsShouldBePascalCased" Enabled="True" />
    <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="ParameterNamesShouldMatchBaseDeclaration" Enabled="True" />
    <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
    <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
    <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="ResourceStringsShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="ShortAcronymsShouldBeUppercase" Enabled="True" />
    <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
    <Rule Name="UsePreferredTerms" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True">
    <Rule Name="AvoidExcessiveLocals" Enabled="True" />
    <Rule Name="AvoidUncalledPrivateCode" Enabled="True" />
    <Rule Name="AvoidUninstantiatedInternalClasses" Enabled="True" />
    <Rule Name="AvoidUnnecessaryStringCreation" Enabled="True" />
    <Rule Name="AvoidUnsealedAttributes" Enabled="True" />
    <Rule Name="AvoidUnusedPrivateFields" Enabled="True" />
    <Rule Name="DisposeMethodsShouldCallSuppressFinalize" Enabled="True" />
    <Rule Name="DoNotCallPropertiesThatCloneValuesInLoops" Enabled="True" />
    <Rule Name="DoNotCastUnnecessarily" Enabled="True" />
    <Rule Name="DoNotConcatenateStringsInsideLoops" Enabled="True" />
    <Rule Name="DoNotInitializeUnnecessarily" Enabled="True" />
    <Rule Name="InitializeReferenceTypeStaticFieldsInline" Enabled="True" />
    <Rule Name="MarkMembersAsStatic" Enabled="True" />
    <Rule Name="OverrideEqualsAndOperatorEqualsOnValueTypes" Enabled="True" />
    <Rule Name="PreferJaggedArraysOverMultidimensional" Enabled="True" />
    <Rule Name="PropertiesShouldNotReturnArrays" Enabled="True" />
    <Rule Name="RemoveEmptyFinalizers" Enabled="True" />
    <Rule Name="RemoveUnusedLocals" Enabled="True" />
    <Rule Name="TestForEmptyStringsUsingStringLength" Enabled="True" />
    <Rule Name="UseLiteralsWhereAppropriate" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True">
    <Rule Name="PInvokeDeclarationsShouldBePortable" Enabled="True" />
    <Rule Name="ValueTypeFieldsShouldBePortable" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True">
    <Rule Name="AptcaMethodsShouldOnlyCallAptcaMethods" Enabled="True" />
    <Rule Name="AptcaTypesShouldOnlyExtendAptcaBaseTypes" Enabled="True" />
    <Rule Name="ArrayFieldsShouldNotBeReadOnly" Enabled="True" />
    <Rule Name="CallGCKeepAliveWhenUsingNativeResources" Enabled="True" />
    <Rule Name="CatchNonClsCompliantExceptionsInGeneralHandlers" Enabled="True" />
    <Rule Name="DoNotDeclareReadOnlyMutableReferenceTypes" Enabled="True" />
    <Rule Name="DoNotIndirectlyExposeMethodsWithLinkDemands" Enabled="True" />
    <Rule Name="MethodSecurityShouldBeASupersetOfType" Enabled="True" />
    <Rule Name="OverrideLinkDemandsShouldBeIdenticalToBase" Enabled="True" />
    <Rule Name="PointersShouldNotBeVisible" Enabled="True" />
    <Rule Name="ReviewDeclarativeSecurityOnValueTypes" Enabled="True" />
    <Rule Name="ReviewDenyAndPermitOnlyUsage" Enabled="True" />
    <Rule Name="ReviewImperativeSecurity" Enabled="True" />
    <Rule Name="ReviewSqlQueriesForSecurityVulnerabilities" Enabled="True" />
    <Rule Name="ReviewSuppressUnmanagedCodeSecurityUsage" Enabled="True" />
    <Rule Name="ReviewVisibleEventHandlers" Enabled="True" />
    <Rule Name="SealMethodsThatSatisfyPrivateInterfaces" Enabled="True" />
    <Rule Name="SecureAsserts" Enabled="True" />
    <Rule Name="SecuredTypesShouldNotExposeFields" Enabled="True" />
    <Rule Name="SecureGetObjectDataOverrides" Enabled="True" />
    <Rule Name="SecureSerializationConstructors" Enabled="True" />
    <Rule Name="SecurityTransparentAssembliesShouldNotContainSecurityCriticalCode" Enabled="True" />
    <Rule Name="SecurityTransparentCodeShouldNotAssert" Enabled="True" />
    <Rule Name="SecurityTransparentCodeShouldNotReferenceNonpublicSecurityCriticalCode" Enabled="True" />
    <Rule Name="SpecifyMarshalingForPInvokeStringArguments" Enabled="True" />
    <Rule Name="StaticConstructorsShouldBePrivate" Enabled="True" />
    <Rule Name="TypeLinkDemandsRequireInheritanceDemands" Enabled="True" />
    <Rule Name="WrapVulnerableFinallyClausesInOuterTry" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True">
    <Rule Name="AssembliesShouldDeclareMinimumSecurity" Enabled="True" />
    <Rule Name="AttributeStringLiteralsShouldParseCorrectly" Enabled="True" />
    <Rule Name="CallBaseClassMethodsOnISerializableTypes" Enabled="True" />
    <Rule Name="CollectionPropertiesShouldBeReadOnly" Enabled="True" />
    <Rule Name="DisposableFieldsShouldBeDisposed" Enabled="True" />
    <Rule Name="DisposableTypesShouldDeclareFinalizer" Enabled="True" />
    <Rule Name="DisposeMethodsShouldCallBaseClassDispose" Enabled="True" />
    <Rule Name="DoNotCallOverridableMethodsInConstructors" Enabled="True" />
    <Rule Name="DoNotDecreaseInheritedMemberVisibility" Enabled="True" />
    <Rule Name="DoNotDisposeObjectsMultipleTimes" Enabled="True" />
    <Rule Name="DoNotIgnoreMethodResults" Enabled="True" />
    <Rule Name="DoNotMarkEnumsWithFlags" Enabled="True" />
    <Rule Name="DoNotMarkServicedComponentsWithWebMethod" Enabled="True" />
    <Rule Name="DoNotRaiseExceptionsInFilterBlocks" Enabled="True" />
    <Rule Name="DoNotRaiseReservedExceptionTypes" Enabled="True" />
    <Rule Name="DoNotShipUnreleasedResourceFormats" Enabled="True" />
    <Rule Name="FinalizersShouldBeProtected" Enabled="True" />
    <Rule Name="FinalizersShouldCallBaseClassFinalizer" Enabled="True" />
    <Rule Name="ImplementISerializableCorrectly" Enabled="True" />
    <Rule Name="ImplementSerializationConstructors" Enabled="True" />
    <Rule Name="ImplementSerializationMethodsCorrectly" Enabled="True" />
    <Rule Name="InitializeValueTypeStaticFieldsInline" Enabled="True" />
    <Rule Name="InstantiateArgumentExceptionsCorrectly" Enabled="True" />
    <Rule Name="LiteralsShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="MarkAllNonSerializableFields" Enabled="True" />
    <Rule Name="MarkISerializableTypesWithSerializable" Enabled="True" />
    <Rule Name="MarkWindowsFormsEntryPointsWithStaThread" Enabled="True" />
    <Rule Name="MembersShouldDifferByMoreThanReturnType" Enabled="True" />
    <Rule Name="NonConstantFieldsShouldNotBeVisible" Enabled="True" />
    <Rule Name="OperationsShouldNotOverflow" Enabled="True" />
    <Rule Name="OperatorOverloadsHaveNamedAlternates" Enabled="True" />
    <Rule Name="OperatorsShouldHaveSymmetricalOverloads" Enabled="True" />
    <Rule Name="OverloadOperatorEqualsOnOverridingValueTypeEquals" Enabled="True" />
    <Rule Name="OverrideEqualsOnOverloadingOperatorEquals" Enabled="True" />
    <Rule Name="OverrideGetHashCodeOnOverridingEquals" Enabled="True" />
    <Rule Name="PassSystemUriObjectsInsteadOfStrings" Enabled="True" />
    <Rule Name="ProvideCorrectArgumentsToFormattingMethods" Enabled="True" />
    <Rule Name="ProvideDeserializationMethodsForOptionalFields" Enabled="True" />
    <Rule Name="RethrowToPreserveStackDetails" Enabled="True" />
    <Rule Name="ReviewUnusedParameters" Enabled="True" />
    <Rule Name="TestForNaNCorrectly" Enabled="True" />
    <Rule Name="UseManagedEquivalentsOfWin32Api" Enabled="True" />
    <Rule Name="UseParamsForVariableArguments" Enabled="True" />
   </RuleFile>
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.35" />
</FxCopProject>
