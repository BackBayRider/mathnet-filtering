//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.1433
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MathNet.Numerics.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MathNet.Numerics.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The histogram does not contains the value {0}. ähnelt.
        /// </summary>
        internal static string ArgumentHistogramContainsNot {
            get {
                return ResourceManager.GetString("ArgumentHistogramContainsNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value is expected to be between {0} and {1} (including {0} and {1}). ähnelt.
        /// </summary>
        internal static string ArgumentInIntervalXYInclusive {
            get {
                return ResourceManager.GetString("ArgumentInIntervalXYInclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The matrix indices must not be out of range of the given matrix. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixIndexOutOfRange {
            get {
                return ResourceManager.GetString("ArgumentMatrixIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must not be rank deficient. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixNotRankDeficient {
            get {
                return ResourceManager.GetString("ArgumentMatrixNotRankDeficient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must not be singular. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixNotSingular {
            get {
                return ResourceManager.GetString("ArgumentMatrixNotSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix column dimensions must agree. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSameColumnDimension {
            get {
                return ResourceManager.GetString("ArgumentMatrixSameColumnDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix dimensions must agree. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSameDimensions {
            get {
                return ResourceManager.GetString("ArgumentMatrixSameDimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix row dimensions must agree. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSameRowDimension {
            get {
                return ResourceManager.GetString("ArgumentMatrixSameRowDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must have exactly one column. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSingleColumn {
            get {
                return ResourceManager.GetString("ArgumentMatrixSingleColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must have exactly one column and row, thus have only one cell. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSingleColumnRow {
            get {
                return ResourceManager.GetString("ArgumentMatrixSingleColumnRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must have exactly one row. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSingleRow {
            get {
                return ResourceManager.GetString("ArgumentMatrixSingleRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must be square. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSquare {
            get {
                return ResourceManager.GetString("ArgumentMatrixSquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must be symmetric. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSymmetric {
            get {
                return ResourceManager.GetString("ArgumentMatrixSymmetric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix must be symmetric positive definite. ähnelt.
        /// </summary>
        internal static string ArgumentMatrixSymmetricPositiveDefinite {
            get {
                return ResourceManager.GetString("ArgumentMatrixSymmetricPositiveDefinite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must neither be infinite nor NaN. ähnelt.
        /// </summary>
        internal static string ArgumentNotInfinityNaN {
            get {
                return ResourceManager.GetString("ArgumentNotInfinityNaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must not be negative (zero is ok). ähnelt.
        /// </summary>
        internal static string ArgumentNotNegative {
            get {
                return ResourceManager.GetString("ArgumentNotNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is a null reference (Nothing in Visual Basic). ähnelt.
        /// </summary>
        internal static string ArgumentNull {
            get {
                return ResourceManager.GetString("ArgumentNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must be greater than {1}. ähnelt.
        /// </summary>
        internal static string ArgumentOutOfRangeGreater {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeGreater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must be greater than or equal to {1}. ähnelt.
        /// </summary>
        internal static string ArgumentOutOfRangeGreaterEqual {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeGreaterEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The chosen parameter set is invalid (probably some value is out of range). ähnelt.
        /// </summary>
        internal static string ArgumentParameterSetInvalid {
            get {
                return ResourceManager.GetString("ArgumentParameterSetInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given expression does not represent a complex number. ähnelt.
        /// </summary>
        internal static string ArgumentParseComplexNumber {
            get {
                return ResourceManager.GetString("ArgumentParseComplexNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value must be positive (and not zero). ähnelt.
        /// </summary>
        internal static string ArgumentPositive {
            get {
                return ResourceManager.GetString("ArgumentPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size must be a Power of Two. ähnelt.
        /// </summary>
        internal static string ArgumentPowerOfTwo {
            get {
                return ResourceManager.GetString("ArgumentPowerOfTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size must be a Power of Two in every dimension. ähnelt.
        /// </summary>
        internal static string ArgumentPowerOfTwoEveryDimension {
            get {
                return ResourceManager.GetString("ArgumentPowerOfTwoEveryDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The range between {0} and {1} must be less than or equal to {2}. ähnelt.
        /// </summary>
        internal static string ArgumentRangeLessEqual {
            get {
                return ResourceManager.GetString("ArgumentRangeLessEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Array must have exactly one dimension (and not be null). ähnelt.
        /// </summary>
        internal static string ArgumentSingleDimensionArray {
            get {
                return ResourceManager.GetString("ArgumentSingleDimensionArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value is too large. ähnelt.
        /// </summary>
        internal static string ArgumentTooLarge {
            get {
                return ResourceManager.GetString("ArgumentTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value is too large for the current iteration limit. ähnelt.
        /// </summary>
        internal static string ArgumentTooLargeForIterationLimit {
            get {
                return ResourceManager.GetString("ArgumentTooLargeForIterationLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type mismatch. ähnelt.
        /// </summary>
        internal static string ArgumentTypeMismatch {
            get {
                return ResourceManager.GetString("ArgumentTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Array length must be a multiple of {0}. ähnelt.
        /// </summary>
        internal static string ArgumentVectorLengthsMultipleOf {
            get {
                return ResourceManager.GetString("ArgumentVectorLengthsMultipleOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All vectors must have the same dimensionality. ähnelt.
        /// </summary>
        internal static string ArgumentVectorsSameLengths {
            get {
                return ResourceManager.GetString("ArgumentVectorsSameLengths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The vector must have 3 dimensions. ähnelt.
        /// </summary>
        internal static string ArgumentVectorThreeDimensional {
            get {
                return ResourceManager.GetString("ArgumentVectorThreeDimensional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Left Boundary Condition. ähnelt.
        /// </summary>
        internal static string InvalidLeftBoundaryCondition {
            get {
                return ResourceManager.GetString("InvalidLeftBoundaryCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation could not be performed because the accumulator is empty. ähnelt.
        /// </summary>
        internal static string InvalidOperationAccumulatorEmpty {
            get {
                return ResourceManager.GetString("InvalidOperationAccumulatorEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation could not be performed because the histogram is empty. ähnelt.
        /// </summary>
        internal static string InvalidOperationHistogramEmpty {
            get {
                return ResourceManager.GetString("InvalidOperationHistogramEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not enough points in the distribution. ähnelt.
        /// </summary>
        internal static string InvalidOperationHistogramNotEnoughPoints {
            get {
                return ResourceManager.GetString("InvalidOperationHistogramNotEnoughPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Samples Provided. Preparation Required. ähnelt.
        /// </summary>
        internal static string InvalidOperationNoSamplesProvided {
            get {
                return ResourceManager.GetString("InvalidOperationNoSamplesProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Right Boundary Condition. ähnelt.
        /// </summary>
        internal static string InvalidRightBoundaryCondition {
            get {
                return ResourceManager.GetString("InvalidRightBoundaryCondition", resourceCulture);
            }
        }
    }
}
