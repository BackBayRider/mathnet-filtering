<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.50727</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5B1D0091-5B3B-4F66-A296-3BCF431FCF15}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MathNet.SignalProcessing</RootNamespace>
    <AssemblyName>MathNet.Neodym</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Properties\mathnet_public.snk</AssemblyOriginatorKeyFile>
    <DelaySign>true</DelaySign>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\..\..\..\build\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\..\..\..\build\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>..\..\..\..\build\Release\MathNet.Neodym.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DataSources\SignalGenerator.cs" />
    <Compile Include="Filter\FilterType.cs" />
    <Compile Include="Filter\FIR\FirCoefficients.cs" />
    <Compile Include="Filter\FIR\FirFilter.cs" />
    <Compile Include="Filter\IFilter.cs" />
    <Compile Include="Filter\IIR\IirCoefficients.cs" />
    <Compile Include="Filter\IIR\IirFilter.cs" />
    <Compile Include="Filter\ImpulseResponse.cs" />
    <Compile Include="Filter\Median\MedianFilter.cs" />
    <Compile Include="Filter\OnlineFilter.cs" />
    <Compile Include="Filter\Utils\ShiftBuffer.cs" />
    <Compile Include="Filter\Utils\OrderedShiftBuffer.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Properties\mathnet_public.snk" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <!-- MATHNET-BEGIN-TESTSIGNING -->

  <Target Name="AfterBuild">
    <CallTarget Targets="TestSign" />
  </Target>

  <PropertyGroup>
    <NL>%0D%0A</NL>
    <QUOT>%22</QUOT>
  </PropertyGroup>

  <PropertyGroup>
    <RootPath>$(MSBuildProjectDirectory)\..\..\..\..\</RootPath>
    <ConfigPath>$(RootPath)config\</ConfigPath>
    <StrongNameTestKeyPrivateFullName>$(ConfigPath)personal_test_private.snk</StrongNameTestKeyPrivateFullName>
  </PropertyGroup>

  <ItemGroup>
    <StrongNameTestKeyPrivate Include="$(StrongNameTestKeyPrivateFullName)" />
  </ItemGroup>

  <Target Name="TestSign">
    <GetFrameworkSdkPath>
      <Output TaskParameter="Path" PropertyName="FrameworkSdkPath"/>
    </GetFrameworkSdkPath>
    <Error Condition="'$(FrameworkSdkPath)'==''" Text="Framework SDK not available." />
    <CreateItem Include="$(FrameworkSdkPath)bin\sn.exe" Condition="'@(StrongNameExe)'==''">
      <Output TaskParameter="Include" ItemName="StrongNameExe"/>
    </CreateItem>
    <Error Condition="!Exists('@(StrongNameExe)')" Text="Strongname Tool not available." />
    <Error Condition="!Exists('@(StrongNameTestKeyPrivate)')" Text="Test-signing private key not found (expected at @(StrongNameTestKeyPrivate)). Execute 'CreateNewPersonalTestKey.bat' once to generate one." />
    <Message Text="$(NL)Test-Signing the target assembly $(TargetPath):$(NL)" />
    <Exec Command="$(QUOT)@(StrongNameExe)$(QUOT) -TS $(QUOT)$(TargetPath)$(QUOT) $(QUOT)@(StrongNameTestKeyPrivate)$(QUOT)" />
  </Target>

  <!-- MATHNET-END-TESTSIGNING -->
  
</Project>