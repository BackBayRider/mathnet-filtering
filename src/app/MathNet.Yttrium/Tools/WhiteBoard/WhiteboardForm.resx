<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="netron.Document" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAGFOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAu
        MjY0NC4xNzgwNCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNkMmIx
        BQEAAAAgTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuRG9jdW1lbnQCAAAAC0luZm9ybWF0aW9uBU1vZGVs
        BAQrTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuRG9jdW1lbnRJbmZvcm1hdGlvbgIAAAAdTmV0cm9uLkRp
        YWdyYW1taW5nLkNvcmUuTW9kZWwCAAAAAgAAAAkDAAAACQQAAAAFAwAAACtOZXRyb24uRGlhZ3JhbW1p
        bmcuQ29yZS5Eb2N1bWVudEluZm9ybWF0aW9uBAAAAAZBdXRob3IMQ3JlYXRpb25EYXRlC0Rlc2NyaXB0
        aW9uBVRpdGxlAQABAQ0CAAAABgUAAAAAgK1WxA5AyQgJBQAAAAkFAAAABQQAAAAdTmV0cm9uLkRpYWdy
        YW1taW5nLkNvcmUuTW9kZWwBAAAABVBhZ2VzBKwBTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuQ29sbGVj
        dGlvbkJhc2VgMVtbTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuSVBhZ2UsIE5ldHJvbi5EaWFncmFtbWlu
        Zy5Db3JlLCBWZXJzaW9uPTMuMC4yNjQ0LjE3ODA0LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPTljNDgxN2NjZmE2Y2QyYjFdXQIAAAACAAAACQYAAAAFBgAAAKwBTmV0cm9uLkRpYWdyYW1taW5n
        LkNvcmUuQ29sbGVjdGlvbkJhc2VgMVtbTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuSVBhZ2UsIE5ldHJv
        bi5EaWFncmFtbWluZy5Db3JlLCBWZXJzaW9uPTMuMC4yNjQ0LjE3ODA0LCBDdWx0dXJlPW5ldXRyYWws
        IFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFdXQEAAAAJSW5uZXJMaXN0A6UBU3lzdGVtLkNv
        bGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JUGFnZSwgTmV0
        cm9uLkRpYWdyYW1taW5nLkNvcmUsIFZlcnNpb249My4wLjI2NDQuMTc4MDQsIEN1bHR1cmU9bmV1dHJh
        bCwgUHVibGljS2V5VG9rZW49OWM0ODE3Y2NmYTZjZDJiMV1dAgAAAAkHAAAABAcAAAClAVN5c3RlbS5D
        b2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuSVBhZ2UsIE5l
        dHJvbi5EaWFncmFtbWluZy5Db3JlLCBWZXJzaW9uPTMuMC4yNjQ0LjE3ODA0LCBDdWx0dXJlPW5ldXRy
        YWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFdXQMAAAAGX2l0ZW1zBV9zaXplCF92ZXJz
        aW9uBAAAH05ldHJvbi5EaWFncmFtbWluZy5Db3JlLklQYWdlW10CAAAACAgJCAAAAAEAAAABAAAABwgA
        AAAAAQAAAAQAAAAEHU5ldHJvbi5EaWFncmFtbWluZy5Db3JlLklQYWdlAgAAAAkJAAAADQMFCQAAABxO
        ZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5QYWdlAgAAAAhBbWJpZW5jZQZMYXllcnMEBCBOZXRyb24uRGlh
        Z3JhbW1pbmcuQ29yZS5BbWJpZW5jZQIAAACtAU5ldHJvbi5EaWFncmFtbWluZy5Db3JlLkNvbGxlY3Rp
        b25CYXNlYDFbW05ldHJvbi5EaWFncmFtbWluZy5Db3JlLklMYXllciwgTmV0cm9uLkRpYWdyYW1taW5n
        LkNvcmUsIFZlcnNpb249My4wLjI2NDQuMTc4MDQsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
        ZW49OWM0ODE3Y2NmYTZjZDJiMV1dAgAAAAIAAAAJCgAAAAkLAAAADAwAAABRU3lzdGVtLkRyYXdpbmcs
        IFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjEx
        ZDUwYTNhBQoAAAAgTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuQW1iaWVuY2UBAAAAD0JhY2tncm91bmRD
        b2xvcgQUU3lzdGVtLkRyYXdpbmcuQ29sb3IMAAAAAgAAAAXz////FFN5c3RlbS5EcmF3aW5nLkNvbG9y
        BAAAAARuYW1lBXZhbHVlCmtub3duQ29sb3IFc3RhdGUBAAAACQcHDAAAAAoAAAAAAAAAAEwAAQAFCwAA
        AK0BTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuQ29sbGVjdGlvbkJhc2VgMVtbTmV0cm9uLkRpYWdyYW1t
        aW5nLkNvcmUuSUxheWVyLCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAuMjY0NC4x
        NzgwNCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNkMmIxXV0BAAAA
        CUlubmVyTGlzdAOmAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbTmV0cm9uLkRpYWdy
        YW1taW5nLkNvcmUuSUxheWVyLCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lvbj0zLjAuMjY0
        NC4xNzgwNCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzQ4MTdjY2ZhNmNkMmIxXV0C
        AAAACQ4AAAAEDgAAAKYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tOZXRyb24uRGlh
        Z3JhbW1pbmcuQ29yZS5JTGF5ZXIsIE5ldHJvbi5EaWFncmFtbWluZy5Db3JlLCBWZXJzaW9uPTMuMC4y
        NjQ0LjE3ODA0LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTljNDgxN2NjZmE2Y2QyYjFd
        XQMAAAAGX2l0ZW1zBV9zaXplCF92ZXJzaW9uBAAAIE5ldHJvbi5EaWFncmFtbWluZy5Db3JlLklMYXll
        cltdAgAAAAgICQ8AAAABAAAAAQAAAAcPAAAAAAEAAAAEAAAABB5OZXRyb24uRGlhZ3JhbW1pbmcuQ29y
        ZS5JTGF5ZXICAAAACRAAAAANAwUQAAAAHU5ldHJvbi5EaWFncmFtbWluZy5Db3JlLkxheWVyAgAAAARO
        YW1lCEVudGl0aWVzAQS1AU5ldHJvbi5EaWFncmFtbWluZy5Db3JlLkNvbGxlY3Rpb25CYXNlYDFbW05l
        dHJvbi5EaWFncmFtbWluZy5Db3JlLklEaWFncmFtRW50aXR5LCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29y
        ZSwgVmVyc2lvbj0zLjAuMjY0NC4xNzgwNCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05
        YzQ4MTdjY2ZhNmNkMmIxXV0CAAAAAgAAAAYRAAAADURlZmF1bHQgTGF5ZXIJEgAAAAUSAAAAtQFOZXRy
        b24uRGlhZ3JhbW1pbmcuQ29yZS5Db2xsZWN0aW9uQmFzZWAxW1tOZXRyb24uRGlhZ3JhbW1pbmcuQ29y
        ZS5JRGlhZ3JhbUVudGl0eSwgTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUsIFZlcnNpb249My4wLjI2NDQu
        MTc4MDQsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49OWM0ODE3Y2NmYTZjZDJiMV1dAQAA
        AAlJbm5lckxpc3QDrgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW05ldHJvbi5EaWFn
        cmFtbWluZy5Db3JlLklEaWFncmFtRW50aXR5LCBOZXRyb24uRGlhZ3JhbW1pbmcuQ29yZSwgVmVyc2lv
        bj0zLjAuMjY0NC4xNzgwNCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzQ4MTdjY2Zh
        NmNkMmIxXV0CAAAACRMAAAAEEwAAAK4BU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tO
        ZXRyb24uRGlhZ3JhbW1pbmcuQ29yZS5JRGlhZ3JhbUVudGl0eSwgTmV0cm9uLkRpYWdyYW1taW5nLkNv
        cmUsIFZlcnNpb249My4wLjI2NDQuMTc4MDQsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
        OWM0ODE3Y2NmYTZjZDJiMV1dAwAAAAZfaXRlbXMFX3NpemUIX3ZlcnNpb24EAAAoTmV0cm9uLkRpYWdy
        YW1taW5nLkNvcmUuSURpYWdyYW1FbnRpdHlbXQIAAAAICAkUAAAAAAAAAAAAAAAHFAAAAAABAAAAAAAA
        AAQmTmV0cm9uLkRpYWdyYW1taW5nLkNvcmUuSURpYWdyYW1FbnRpdHkCAAAACw==
</value>
  </data>
</root>